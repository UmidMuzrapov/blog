@page "/experience"
@using Entity
@inject HttpClient http
<PageTitle>Experience</PageTitle>
<div class="limit-width">

    <RadzenRow>
        <div class="custom-card-header"><RadzenText Text="Professional Experience" TextStyle="TextStyle.DisplayH4" TagName="Radzen.Blazor.TagName.H3"> </RadzenText></div>
        <RadzenTimeline>
            <Items>
                @foreach (WorkExperience job in jobs)
                {
                    <RadzenTimelineItem PointStyle="PointStyle.Secondary" PointSize="PointSize.Medium">
                        <LabelContent>
                            <RadzenText TextStyle="TextStyle.Subtitle1" Class="rz-m-0">@job.startDate?.ToShortDateString() - @(job.endDate?.ToShortDateString() ?? "Present")</RadzenText>
                            </LabelContent>
                            <ChildContent>
                                <RadzenText Text=@(job.Title + " at " +@job.Company) TextStyle="TextStyle.Body1"> </RadzenText>
                            </ChildContent>
                        </RadzenTimelineItem>
                }
            </Items>
        </RadzenTimeline>

      
    </RadzenRow>

    <RadzenRow>
        <div class="custom-card-header"><RadzenText Text="Skills" TextStyle="TextStyle.DisplayH4" TagName="Radzen.Blazor.TagName.H3"> </RadzenText></div>
        <div class="flex-container">


            @foreach (Skill skill in skills)
            {
                <div class="flex-item">
                    <SkillCard Skill=@skill> </SkillCard>
                </div>
            }
        </div>
    </RadzenRow>
</div>

@code {
    private List<WorkExperience> jobs = new List<WorkExperience>();
    private List<Skill> skills = new List<Skill>();

    protected async override void OnInitialized()
    {
        string endPoint = http.BaseAddress + "data/json/";
        jobs = await http.GetFromJsonAsync<List<WorkExperience>>(endPoint + "workExperience.json");
        skills = await http.GetFromJsonAsync<List<Skill>>(endPoint + "skills.json");
        StateHasChanged();
    }
}


